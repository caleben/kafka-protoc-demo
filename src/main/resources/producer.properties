#引导发现kafka集群
bootstrap.servers=min1:9092,min2:9092,min3:9092
#当有多条消息要发往同一个分区时，合并，采用分批发送机制，对于producer调优至关重要。此参数过小：降低吞吐量；过大：浪费内存。单位：bytes
batch.size=16384
#持久性：[all,-1,0,1] 其中
# all与-1相同:高持久性，leader和所有follower都成功接收到（copy到），leader回复producer发送成功，producer再发送下一条
# 0：leader接收到不管是否备份就回复producer发送成功，producer再发送下一条
# 1：高吞吐性，producer不需要接收到leader返回信息都认为发送成功，producer连续发送信息。此时reties参数无效。
acks=all
#发送失败后重试次数。对于有强烈无消息丢失需求的用户来说，开启重试机制是必选项。
retries=0
#减少网络IO，节省宽带之用。原理是把原本需要多次发送的小batch通过引入延时的方式合并成大batch发送。
linger.ms=1
#[none,gzip,snappy,lz4] producer所使用的压缩器，压缩是在用户主线程完成的，通常会花费大量CPU时间，但是减少IO的利器。
compression.type=none
# producer用于缓存等待发送给server的记录信息的缓存容量，默认32M
buffer.memory=33554432
#用于序列化key/value的类
#key.serializer=org.apache.kafka.common.serialization.StringSerializer
#value.serializer=org.apache.kafka.common.serialization.StringSerializer
#自定义的序列化器
key.serializer=kfkprotoc.synway.ProtoSerializer
value.serializer=kfkprotoc.synway.ProtoSerializer
#自定义的分区器
#partitioner.class=kfkprotoc.synway.MyPartitioner